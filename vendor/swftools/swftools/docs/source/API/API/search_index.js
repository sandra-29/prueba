var search_data = {
    'index': {
        'searchIndex': ["swftools","swftools\\binary","swftools\\exception","swftools\\processor","swftools\\binary\\adapterinterface","swftools\\binary\\binary","swftools\\binary\\pdf2swf","swftools\\binary\\swfextract","swftools\\binary\\swfrender","swftools\\configuration","swftools\\embeddedobject","swftools\\exception\\binarynotfoundexception","swftools\\exception\\exceptioninterface","swftools\\exception\\invalidargumentexception","swftools\\exception\\logicexception","swftools\\exception\\runtimeexception","swftools\\processor\\file","swftools\\processor\\flashfile","swftools\\processor\\pdffile","swftools\\swftoolsserviceprovider","swftools\\binary\\adapterinterface::getversion","swftools\\binary\\adapterinterface::load","swftools\\binary\\binary::__construct","swftools\\binary\\binary::settimeout","swftools\\binary\\binary::gettimeout","swftools\\binary\\binary::getversion","swftools\\binary\\pdf2swf::toswf","swftools\\binary\\pdf2swf::load","swftools\\binary\\swfextract::listembedded","swftools\\binary\\swfextract::extract","swftools\\binary\\swfextract::load","swftools\\binary\\swfrender::render","swftools\\binary\\swfrender::load","swftools\\configuration::__construct","swftools\\configuration::has","swftools\\configuration::get","swftools\\embeddedobject::__construct","swftools\\embeddedobject::getoption","swftools\\embeddedobject::gettype","swftools\\embeddedobject::getid","swftools\\embeddedobject::detecttype","swftools\\processor\\file::__construct","swftools\\processor\\file::__destruct","swftools\\processor\\file::open","swftools\\processor\\file::close","swftools\\processor\\flashfile::__destruct","swftools\\processor\\flashfile::render","swftools\\processor\\flashfile::listembeddedobjects","swftools\\processor\\flashfile::extractembedded","swftools\\processor\\flashfile::extractfirstimage","swftools\\processor\\pdffile::toswf","swftools\\swftoolsserviceprovider::register","swftools\\swftoolsserviceprovider::boot"],
        'info': [["SwfTools","","SwfTools.html","","",3],["SwfTools\\Binary","","SwfTools\/Binary.html","","",3],["SwfTools\\Exception","","SwfTools\/Exception.html","","",3],["SwfTools\\Processor","","SwfTools\/Processor.html","","",3],["AdapterInterface","SwfTools\\Binary","SwfTools\/Binary\/AdapterInterface.html","","The adapter interface.",1],["Binary","SwfTools\\Binary","SwfTools\/Binary\/Binary.html","","The abstract binary adapter",1],["Pdf2swf","SwfTools\\Binary","SwfTools\/Binary\/Pdf2swf.html"," < Binary","The Pdf2Swf adapter",1],["Swfextract","SwfTools\\Binary","SwfTools\/Binary\/Swfextract.html"," < Binary","",1],["Swfrender","SwfTools\\Binary","SwfTools\/Binary\/Swfrender.html"," < Binary","",1],["Configuration","SwfTools","SwfTools\/Configuration.html","","",1],["EmbeddedObject","SwfTools","SwfTools\/EmbeddedObject.html","","",1],["BinaryNotFoundException","SwfTools\\Exception","SwfTools\/Exception\/BinaryNotFoundException.html"," < RuntimeException","",1],["ExceptionInterface","SwfTools\\Exception","SwfTools\/Exception\/ExceptionInterface.html","","",1],["InvalidArgumentException","SwfTools\\Exception","SwfTools\/Exception\/InvalidArgumentException.html"," < InvalidArgumentException","",1],["LogicException","SwfTools\\Exception","SwfTools\/Exception\/LogicException.html"," < LogicException","",1],["RuntimeException","SwfTools\\Exception","SwfTools\/Exception\/RuntimeException.html"," < RuntimeException","",1],["File","SwfTools\\Processor","SwfTools\/Processor\/File.html","","",1],["FlashFile","SwfTools\\Processor","SwfTools\/Processor\/FlashFile.html"," < File","",1],["PDFFile","SwfTools\\Processor","SwfTools\/Processor\/PDFFile.html"," < File","",1],["SwfToolsServiceProvider","SwfTools","SwfTools\/SwfToolsServiceProvider.html","","",1],["AdapterInterface::getVersion","SwfTools\\Binary\\AdapterInterface","SwfTools\/Binary\/AdapterInterface.html#method_getVersion","()","Return the version of the binary adapter",2],["AdapterInterface::load","SwfTools\\Binary\\AdapterInterface","SwfTools\/Binary\/AdapterInterface.html#method_load","(<a href=\"SwfTools\/Configuration.html\"><abbr title=\"SwfTools\\Configuration\">Configuration<\/abbr><\/a> $configuration, <abbr title=\"Monolog\\Logger\">Logger<\/abbr> $logger)","Load the binary adapter.",2],["Binary::__construct","SwfTools\\Binary\\Binary","SwfTools\/Binary\/Binary.html#method___construct","(<abbr title=\"SwfTools\\Binary\\type\">type<\/abbr> $binaryPathname, <abbr title=\"Monolog\\Logger\">Logger<\/abbr> $logger, integer $timeout)","The path to the binary",2],["Binary::setTimeout","SwfTools\\Binary\\Binary","SwfTools\/Binary\/Binary.html#method_setTimeout","(integer $timeout)","Set the timeout for the underlying processes ; 0 means",2],["Binary::getTimeout","SwfTools\\Binary\\Binary","SwfTools\/Binary\/Binary.html#method_getTimeout","()","Get the timeout for the underlyning processes ; 0 means",2],["Binary::getVersion","SwfTools\\Binary\\Binary","SwfTools\/Binary\/Binary.html#method_getVersion","()","Try to get the version of the binary.",2],["Pdf2swf::toSwf","SwfTools\\Binary\\Pdf2swf","SwfTools\/Binary\/Pdf2swf.html#method_toSwf","(string $pathfile, string $outputFile, array $options = array(), string $convertType = self::CONVERT_POLY2BITMAP, integer $resolution = 72, integer $pageRange = &#039;1-&#039;, integer $frameRate = 15, integer $jpegquality = 75, integer $timelimit = null)","",2],["Pdf2swf::load","SwfTools\\Binary\\Pdf2swf","SwfTools\/Binary\/Pdf2swf.html#method_load","(<a href=\"SwfTools\/Configuration.html\"><abbr title=\"SwfTools\\Configuration\">Configuration<\/abbr><\/a> $configuration, <abbr title=\"Monolog\\Logger\">Logger<\/abbr> $logger)","Factory method to build the adapter",2],["Swfextract::listEmbedded","SwfTools\\Binary\\Swfextract","SwfTools\/Binary\/Swfextract.html#method_listEmbedded","(string $pathfile)","Execute the command to list the embedded objects",2],["Swfextract::extract","SwfTools\\Binary\\Swfextract","SwfTools\/Binary\/Swfextract.html#method_extract","(string $pathfile, <a href=\"SwfTools\/EmbeddedObject.html\"><abbr title=\"SwfTools\\EmbeddedObject\">EmbeddedObject<\/abbr><\/a> $embedded, string $outputFile)","Execute the command to extract an embedded object from",2],["Swfextract::load","SwfTools\\Binary\\Swfextract","SwfTools\/Binary\/Swfextract.html#method_load","(<a href=\"SwfTools\/Configuration.html\"><abbr title=\"SwfTools\\Configuration\">Configuration<\/abbr><\/a> $configuration, <abbr title=\"Monolog\\Logger\">Logger<\/abbr> $logger)","Factory method to build the binary",2],["Swfrender::render","SwfTools\\Binary\\Swfrender","SwfTools\/Binary\/Swfrender.html#method_render","(string $pathfile, string $outputFile, Boolean $legacy)","",2],["Swfrender::load","SwfTools\\Binary\\Swfrender","SwfTools\/Binary\/Swfrender.html#method_load","(<a href=\"SwfTools\/Configuration.html\"><abbr title=\"SwfTools\\Configuration\">Configuration<\/abbr><\/a> $configuration, <abbr title=\"Monolog\\Logger\">Logger<\/abbr> $logger)","Factory method to build the binary",2],["Configuration::__construct","SwfTools\\Configuration","SwfTools\/Configuration.html#method___construct","(array $configuration = array())","",2],["Configuration::has","SwfTools\\Configuration","SwfTools\/Configuration.html#method_has","($key)","",2],["Configuration::get","SwfTools\\Configuration","SwfTools\/Configuration.html#method_get","($key)","",2],["EmbeddedObject::__construct","SwfTools\\EmbeddedObject","SwfTools\/EmbeddedObject.html#method___construct","(string $option, <abbr title=\"SwfTools\\type\">type<\/abbr> $type, int $id)","",2],["EmbeddedObject::getOption","SwfTools\\EmbeddedObject","SwfTools\/EmbeddedObject.html#method_getOption","()","",2],["EmbeddedObject::getType","SwfTools\\EmbeddedObject","SwfTools\/EmbeddedObject.html#method_getType","()","",2],["EmbeddedObject::getId","SwfTools\\EmbeddedObject","SwfTools\/EmbeddedObject.html#method_getId","()","",2],["EmbeddedObject::detectType","SwfTools\\EmbeddedObject","SwfTools\/EmbeddedObject.html#method_detectType","(string $type)","Detect type based on the raw output",2],["File::__construct","SwfTools\\Processor\\File","SwfTools\/Processor\/File.html#method___construct","(<a href=\"SwfTools\/Configuration.html\"><abbr title=\"SwfTools\\Configuration\">Configuration<\/abbr><\/a> $configuration = null, <abbr title=\"Monolog\\Logger\">Logger<\/abbr> $logger = null)","Build the File processor given the configuration",2],["File::__destruct","SwfTools\\Processor\\File","SwfTools\/Processor\/File.html#method___destruct","()","",2],["File::open","SwfTools\\Processor\\File","SwfTools\/Processor\/File.html#method_open","($pathfile)","",2],["File::close","SwfTools\\Processor\\File","SwfTools\/Processor\/File.html#method_close","()","",2],["FlashFile::__destruct","SwfTools\\Processor\\FlashFile","SwfTools\/Processor\/FlashFile.html#method___destruct","()","",2],["FlashFile::render","SwfTools\\Processor\\FlashFile","SwfTools\/Processor\/FlashFile.html#method_render","(string $outputFile, Boolean $legacy_rendering = false)","Render the flash to PNG file",2],["FlashFile::listEmbeddedObjects","SwfTools\\Processor\\FlashFile","SwfTools\/Processor\/FlashFile.html#method_listEmbeddedObjects","(Boolean $useCache = false)","List all embedded object of the current flash file",2],["FlashFile::extractEmbedded","SwfTools\\Processor\\FlashFile","SwfTools\/Processor\/FlashFile.html#method_extractEmbedded","(integer $id, string $outputFile)","Extract the specified Embedded file",2],["FlashFile::extractFirstImage","SwfTools\\Processor\\FlashFile","SwfTools\/Processor\/FlashFile.html#method_extractFirstImage","(string $outputFile)","Extract the first embedded image found",2],["PDFFile::toSwf","SwfTools\\Processor\\PDFFile","SwfTools\/Processor\/PDFFile.html#method_toSwf","(string $outputFile)","",2],["SwfToolsServiceProvider::register","SwfTools\\SwfToolsServiceProvider","SwfTools\/SwfToolsServiceProvider.html#method_register","(<abbr title=\"Silex\\Application\">Application<\/abbr> $app)","",2],["SwfToolsServiceProvider::boot","SwfTools\\SwfToolsServiceProvider","SwfTools\/SwfToolsServiceProvider.html#method_boot","(<abbr title=\"Silex\\Application\">Application<\/abbr> $app)","",2]]
    }
}
search_data['index']['longSearchIndex'] = search_data['index']['searchIndex']